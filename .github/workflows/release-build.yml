name: Build FlyEnv Packages (Linux / macOS / Windows)

on:
  release:
    types: [published]

jobs:
  build:
    name: Build (${{ matrix.os }} â€¢ ${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - os: ubuntu-22.04
            arch: x64
            target: x64
#          - os: ubuntu-22.04-arm
#            arch: arm64
#            target: arm64
          # macOS
#          - os: macos-latest
#            arch: arm64
#            target: arm64
#          - os: macos-latest
#            arch: x64
#            target: x64
          # Windows
          - os: windows-latest
            arch: x64
            target: x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Latest Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Setup Go (stable)
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'

      - name: Setup Python (for node-gyp)
        if: runner.os == 'Windows'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            g++ \
            make \
            python3 \
            python3-pip \
            pkg-config \
            fakeroot \
            rpm
          python3 -m pip install --upgrade pip

      - name: Install build deps (macOS)
        if: runner.os == 'macOS'
        run: brew update

      - name: Install build deps (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y nsis
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools"
          choco install make
          choco install 7zip

      - name: Cache node-gyp & yarn cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/node-gyp
            ~/.yarn
            .yarn/cache
            node_modules
            **/node_modules
          key: ${{ runner.os }}-${{ matrix.arch }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Yarn & tools
        run: |
          npm -g install yarn node-gyp
          yarn --version
          node -v
          go version

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Go helper Linux
        if: runner.os == 'Linux'
        shell: bash
        working-directory: src/helper-go
        run: |
          go mod tidy
          chmod +x ./build-os.sh
          ./build-os.sh

      - name: Build Go helper Windows
        if: runner.os == 'Windows'
        shell: pwsh
        working-directory: src/helper-go
        run: |
          go mod tidy
          ./build-win.ps1

      - name: Build Go helper macOS
        if: runner.os == 'macOS'
        shell: bash
        working-directory: src/helper-go
        run: |
          go mod tidy
          chmod +x ./build.sh
          ./build.sh

      - name: Build Electron packages
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn build

      - name: Upload Linux artifacts to GitHub Release
        if: runner.os == 'Linux'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.deb
            release/*.rpm
            release/*.blockmap
            release/latest-linux.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windowns artifacts to GitHub Release
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.exe
            release/latest.yml
            release/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
